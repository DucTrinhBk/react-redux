{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-apps\\\\reduxexample\\\\src\\\\Post.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from './actions/postAction';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.props.data.items.map(post => React.createElement(\"div\", {\n      className: \"jumbotron\",\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dt-em-text col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, post.title)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, post.body))));\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapState = state => ({\n  data: state.reducer\n});\n\nexport default connect(mapState, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["D:\\react-apps\\reduxexample\\src\\Post.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Posts","componentWillMount","props","render","data","items","map","post","id","title","body","propTypes","func","isRequired","object","mapState","state","reducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;;AACA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,KAAL,CAAWH,UAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,IAAI,IAC3B;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,IAAI,CAACE,KAAjC,CAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CALJ,CADH,CADL,CADJ;AAaH;;AAlByB;;AAoB9BV,KAAK,CAACW,SAAN,GAAkB;AACdZ,EAAAA,UAAU,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADb;AAEdT,EAAAA,IAAI,EAAEP,SAAS,CAACiB,MAAV,CAAiBD;AAFT,CAAlB;;AAIA,MAAME,QAAQ,GAAGC,KAAK,KAAI;AACtBZ,EAAAA,IAAI,EAAEY,KAAK,CAACC;AADU,CAAJ,CAAtB;;AAGA,eAAenB,OAAO,CAACiB,QAAD,EAAU;AAAChB,EAAAA;AAAD,CAAV,CAAP,CAA+BC,KAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPosts} from './actions/postAction';\r\nclass Posts extends Component {\r\n    componentWillMount(){\r\n        this.props.fetchPosts();\r\n    }\r\n    render() {\r\n        return ( \r\n            <ul className=\"container\">\r\n                {this.props.data.items.map(post =>\r\n                    <div className=\"jumbotron\" key={post.id}>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"dt-em-text col-sm-2\">Title</div>\r\n                            <div className=\"col-sm-10\">{post.title}</div>\r\n                        </div>\r\n                        <p>{post.body}</p>\r\n                    </div>\r\n                )}\r\n            </ul>\r\n         );\r\n    }\r\n}\r\nPosts.propTypes = {\r\n    fetchPosts: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\nconst mapState = state =>({\r\n    data: state.reducer\r\n});\r\nexport default connect(mapState,{fetchPosts})(Posts);"]},"metadata":{},"sourceType":"module"}