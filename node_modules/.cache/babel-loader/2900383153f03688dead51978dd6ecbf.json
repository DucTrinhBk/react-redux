{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-apps\\\\reduxexample\\\\src\\\\components\\\\users.js\";\nimport React, { Component } from 'react';\nimport User from './user';\nimport { connect } from 'react-redux';\nimport getDatas from '../actions/usersAction';\nimport { SUCCESS, ERROR, NO_RESULT } from '../utilities/config';\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getView = () => {\n      switch (this.props.type) {\n        case SUCCESS:\n          return React.createElement(\"div\", {\n            className: \"jumbotron container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, this.props.data.map(user => React.createElement(User, {\n            key: user.id,\n            user: user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, this.props.user.message);\n      }\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.props.getDatas();\n  }\n\n  render() {\n    return this.getView();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    type: state.users.type,\n    data: state.users.data,\n    message: state.users.message\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDatas\n})(Users);","map":{"version":3,"sources":["D:\\react-apps\\reduxexample\\src\\components\\users.js"],"names":["React","Component","User","connect","getDatas","SUCCESS","ERROR","NO_RESULT","Users","getView","props","type","data","map","user","id","message","UNSAFE_componentWillMount","render","mapStateToProps","state","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,EAAiBC,KAAjB,EAAuBC,SAAvB,QAAwC,qBAAxC;;AACA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAI1BQ,OAJ0B,GAIhB,MAAI;AACV,cAAO,KAAKC,KAAL,CAAWC,IAAlB;AACI,aAAKN,OAAL;AACQ,iBACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKK,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,YAAA,IAAI,EAAID,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5B,CADL,CADJ;;AAIR;AACI,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK,KAAKJ,KAAL,CAAWI,IAAX,CAAgBE,OAArB,CAAP;AAPR;AASH,KAdyB;AAAA;;AAC1BC,EAAAA,yBAAyB,GAAE;AACvB,SAAKP,KAAL,CAAWN,QAAX;AACH;;AAYDc,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKT,OAAL,EAAP;AACH;;AAjByB;;AAmB7B,MAAMU,eAAe,GAAGC,KAAK,IAAG;AAC7B,SAAQ;AACJT,IAAAA,IAAI,EAAES,KAAK,CAACC,KAAN,CAAYV,IADd;AAEJC,IAAAA,IAAI,EAAEQ,KAAK,CAACC,KAAN,CAAYT,IAFd;AAGJI,IAAAA,OAAO,EAAEI,KAAK,CAACC,KAAN,CAAYL;AAHjB,GAAR;AAKF,CAND;;AAOD,eAAeb,OAAO,CAACgB,eAAD,EAAiB;AAACf,EAAAA;AAAD,CAAjB,CAAP,CAAoCI,KAApC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport User from './user';\r\nimport {connect} from 'react-redux';\r\nimport getDatas from '../actions/usersAction';\r\nimport { SUCCESS,ERROR,NO_RESULT } from '../utilities/config';\r\nclass Users extends Component {\r\n    UNSAFE_componentWillMount(){\r\n        this.props.getDatas();\r\n    }\r\n    getView = ()=>{\r\n        switch(this.props.type){\r\n            case SUCCESS:\r\n                    return ( \r\n                        <div className=\"jumbotron container\">\r\n                            {this.props.data.map(user =>(<User key={user.id} user = {user}/>))}\r\n                        </div> )\r\n            default:\r\n                return <h1>{this.props.user.message}</h1>\r\n        }\r\n    }\r\n    render() { \r\n        return this.getView();\r\n    }\r\n}\r\n const mapStateToProps = state =>{\r\n    return ({\r\n        type: state.users.type,\r\n        data: state.users.data,\r\n        message: state.users.message\r\n    });\r\n }\r\nexport default connect(mapStateToProps,{getDatas})(Users);"]},"metadata":{},"sourceType":"module"}